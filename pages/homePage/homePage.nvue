<template>
	<view class="u-page">

		<view class="u-page__item" style="margin-bottom: 20px;">
			<div class="background-blue">
				<view class="u-input m-middle-2" style="margin-top: 20px">
					<u--input placeholder="请输入想要搜索的题库或小组名称" prefixIcon="search"
						prefixIconStyle="font-size: 20px;color: #909399" shape="circle" v-model="searchValue"
						customStyle="background-color: white;">
					</u--input>
				</view>

				<view class="u-demo-block__content" style="margin-top: 10px; margin-bottom: 10px;">
					<uni-row class="demo-uni-row">
						<uni-col :span="6">
							<view style="margin: auto;">
								<u-icon name="/static/pic/camera2.svg" size="40px" color="white"></u-icon>
							</view>
							<view style="margin: auto;">
								<p style="color: white; font-size: 14px;"> 拍照录题</p>
							</view>
						</uni-col>
						<uni-col :span="6">
							<view style="margin: auto;" @click="jumpoToCreateNote()">
								<u-icon name="/static/pic/edit2.svg" size="40px" color="white"></u-icon>
							</view>
							<view style="margin: auto;">
								<p style="color: white; font-size: 14px;"> 添加笔记 </p>
							</view>
						</uni-col>
						<uni-col :span="6">
							<view style="margin: auto;" @click="jumpToCreateProblemSet()">
								<u-icon name="/static/pic/upload2.svg" size="40px" color="white"></u-icon>
							</view>
							<view style="margin: auto;" @click="jumpToCreateProblemSet()">
								<p style="color: white; font-size: 14px;"> 创建题库 </p>
							</view>
						</uni-col>
						<uni-col :span="6">
							<view style="margin: auto;" @click="jumpToCreateGroup()">
								<u-icon name="/static/pic/note.svg" size="40px" color="white"></u-icon>
							</view>
							<view style="margin: auto;">
								<p style="color: white; font-size: 14px;"> 创建小组 </p>
							</view>
						</uni-col>
					</uni-row>
				</view>
			</div>
		</view>

		<view class="m-middle-2">
			<uni-row>
				<uni-col :span="12">
					<view>
						<p class="homePage-header">精选笔记</p>
					</view>
				</uni-col>

				<uni-col :span="12">
					<view>
						<p class="check-all" @click="jumpToAllNote()">查看全部</p>
					</view>
				</uni-col>
			</uni-row>
		</view>


		<view class=" m-middle-2">
			<u-scroll-list indicatorColor="#fff0f0" indicatorActiveColor="#00aaff" indicatorStyle="margin-top : 0">
				<view class="scroll-list" style="flex-direction: row;">
					<view class="scroll-list__goods-item" v-for="(item, index) in notes" :key="index">
						<uni-card isShadow border padding="15px 5px 0px 5px" margin="15px 20px 20px 0px"
							style="border-radius: 10px; width: 350px;" @click="cardClick(item)">
							<view class="u-demo-block">
								<view>
									<view>
										<text class="note-title">{{item.note_title}}</text>

										<uni-row v-if="item.pic" style="margin-top: 15px;">
											<uni-col :span="12">
												<view style=" height:90px;">
													<p class="note-content">
														{{item.note_content ? item.note_content : "..."}}
													</p>
												</view>
											</uni-col>
											<uni-col :offset="3" :span="9">
												<view>
													<u--image :src="item.pic" width="250rpx" height="160rpx"
														radius="15"></u--image>
												</view>
											</uni-col>
										</uni-row>

										<uni-row v-else style="margin-top: 15px; ">
											<uni-col :span="24">
												<view style=" height:90px;">
													<p class="note-content"> {{item.note_content}}</p>
												</view>
											</uni-col>
										</uni-row>

										<view style="margin-top: 5px;">
											<u--text type="info" :text="item.create_time" size="12px"></u--text>
										</view>

										<view style="margin-top: 10px;">
											<uni-row>
												<uni-col :span="2">
													<u-icon name="/static/pic/like.svg" size="30px"></u-icon>
												</uni-col>
												<uni-col :span="4">
													<button type="primary" size="mini"
														style="width: 60px; background-color: #00aaff; margin-left: 5px;">{{ item.like_count }}</button>
												</uni-col>
												<uni-col :offset="10" :span="2">
													<u-icon name="/static/pic/star.svg" size="30px"></u-icon>
												</uni-col>
												<uni-col :span="4">
													<button size="mini"
														style="width: 60px; background-color: #f9ae3d; color: white; margin-left: 5px;">
														{{ item.star_count }}</button>
												</uni-col>
											</uni-row>
										</view>


									</view>
								</view>
							</view>

						</uni-card>
					</view>
				</view>
			</u-scroll-list>
		</view>

		<view class="m-middle-2">
			<uni-row>
				<uni-col :span="12">
					<view>
						<p class="homePage-header"> 精选题库</p>
					</view>
				</uni-col>

				<uni-col :span="12">
					<view>
						<p class="check-all" @click="jumpToAllProblemSet()">查看全部</p>
					</view>
				</uni-col>
			</uni-row>
		</view>


		<view class="u-demo-block" v-if="problemSet && problemSet.length > 0">
			<u-list customStyle="width: 94%; margin: auto; max-height: 380px; margin-top: 15px;">
				<u-list-item v-for="(item, index) in problemSet" :key="index">
					<uni-card spacing="0" padding="0" margin="10px 0px 0px 10px" @click="jumpToProblemSetDetail(item)">
						<view>
							<uni-row>
								<uni-col :span="8" align="start">
									<p style="margin-right: auto;">
										<u-avatar :src="myRequest.imageUrl() + '/public'
											+ item.user_info.avatar_path" size="60px"></u-avatar>
									<div style="margin-top: 10px; font-family: shuhei;">创建者 {{item.user_info.nick_name}}</div>
									</p>

								</uni-col>

								<uni-col :span="16" align="start">
									<div class="shuhei" style="margin-bottom: 5px;margin-top: 12px;">
										<p style="font-size: 20px;">{{item.name}}</p>
									</div>
									<div style="font-size: 16px; margin-top: 5px;">
										{{item.problem_number}} 道题目
										&ensp; &ensp;
										{{item.created_at}}
									</div>
								</uni-col>
							</uni-row>
							<u-divider> </u-divider>
						</view>
					</uni-card>
				</u-list-item>
			</u-list>
		</view>


		<view class="m-middle-2">
			<uni-row>
				<uni-col :span="12">
					<view>
						<p class="homePage-header"> 精选小组</p>
					</view>
				</uni-col>

				<uni-col :span="12">
					<view>
						<p class="check-all" @click="jumpToAllGroup()">查看全部</p>
					</view>
				</uni-col>
			</uni-row>
		</view>

		<view class="u-demo-block" v-if="groups && groups.length > 0">
			<u-list customStyle="margin: auto; max-height: 380px; margin-top: 15px;">
				<u-list-item v-for="(item, index) in groups" :key="index">
					<uni-card :title="item.name" :extra="'创建于' + item.create_time" :thumbnail="item.pic"
						@click="jumpToStudyGroup(item)" isShadow border padding="15px 5px 15px 5px" margin="0px 15px 15px 15px"
						style="border-radius: 10px;">
						<text class="uni-body">{{item.description}}</text>
					</uni-card>
				</u-list-item>
			</u-list>
		</view>



		<!--
		<view class="u-demo-block" v-if="problemSet && problemSet.length > 0">
			<u-list customStyle="width: 94%; margin: auto; max-height: 350px; margin-top: 15px;">
				<u-list-item v-for="(item, index) in problemSet" :key="index">
					<uni-card spacing="0" padding="0" margin="10px 0px 0px 10px" @click="jumpToProblemSetDetail(item)">
						<view>
							<uni-row>
								<uni-col :span="5" align="start">
									<view>
										<u-icon name="/static/pic/qb.svg" size="50px"></u-icon>
									</view>
								</uni-col>

								<uni-col :span="18" align="start">
									<div class="shuhei" style="margin-bottom: 5px;">
										<p style="font-size: 20px;">{{item.name}}</p>
									</div>
									<div style="font-size: 16px;">
										{{item.problem_number}} 道题目
										&ensp; &ensp;
										{{item.created_at}}
									</div>
								</uni-col>
							</uni-row>
							<u-divider v-if="problemSet && (index != Math.min(3,problemSet.length - 1))"> </u-divider>
						</view>
					</uni-card>
				</u-list-item>
			</u-list>
		</view>
		-->

		<view style="margin-bottom: 20px;">

		</view>

	</view>
</template>

<script>
	import myRequest from '../../common/request';
	import api from '@/common/api.js';
	export default {
		data() {
			return {
				searchValue: "",
				tabValue: 0,
				notes: [{
						author_name: "Longxmas",
						note_title: "二分查找",
						note_content: "二分查找是一类常见的算法问题, 对于这种问题，尤其需要注意的就是细节以及边界条件的处理," +
							"二分查找是一类常见的算法问题, 对于这种问题，尤其需要注意的就是细节以及边界条件的处理" +
							"二分查找是一类常见的算法问题, 对于这种问题，尤其需要注意的就是细节以及边界条件的处理" +
							"二分查找是一类常见的算法问题, 对于这种问题，尤其需要注意的就是细节以及边界条件的处理",
						pic: "../../static/pic/binSearch.png"
					},
					{
						author_name: "Longxmas",
						note_title: "二分查找",
						note_content: "二分查找是一类常见的算法问题",
						pic: "../../static/pic/binSearch.png"
					},
					{
						author_name: "Longxmas",
						note_title: "二分查找",
						note_content: "二分查找是一类常见的算法问题, 对于这种问题，尤其需要注意的就是细节以及边界条件的处理",
						pic: "../../static/pic/binSearch.png"
					},
					{
						author_name: "Longxmas",
						note_title: "二分查找",
						note_content: "二分查找是一类常见的算法问题",
						pic: "../../static/pic/binSearch.png"
					},
					{
						author_name: "Longxmas",
						note_title: "二分查找",
						note_content: "二分查找是一类常见的算法问题",
						pic: "../../static/pic/binSearch.png"
					}
				],
				problemSet: [],

				groups: []
			}
		},
		watch: {
			searchValue(newValue, oldValue) {
				// console.log('v-model', newValue);
			}
		},

		methods: {
			jumpToPerson() {
				uni.navigateTo({
					url: "/pages/note/note"
				})
			},
			jumpToCreateProblemSet() {
				uni.navigateTo({
					url: "/pages/problemSet/problemSetCreate"
				})
			},
			jumpToComponents() {
				uni.navigateTo({
					url: "/pages/example/components"
				})
			},
			jumpoToCreateNote() {
				uni.navigateTo({
					url: "/pages/note/create_note"
				})
			},
			jumpoToUploadProblem() {
				uni.navigateTo({
					url: "/pages/problemCreate/problemCreate"
				})
			},
			jumpToAllGroup() {
				uni.navigateTo({
					url: "/pages/StudyGroup/StudyGroupIndex"
				})
			},
			jumpToStudyGroup(item) {
				uni.navigateTo({
					url: `/pages/StudyGroup/StudyGroup?id=` + item.id,
				})
			},
			jumpToCreateGroup() {
				uni.navigateTo({
					url: `/pages/StudyGroup/StudyGroupCreate`
				})
			},
			jumpToAllNote() {
				uni.switchTab({
					url: '/pages/note/index'
				})
			},
			jumpToAllProblemSet() {
				uni.navigateTo({
					url: "/pages/personal/personalProblemSet"
				})
			},
			jumpToProblemSetDetail(item) {
				uni.navigateTo({
					url: "/pages/problemSet/problemSetDetail?id=" + item.id
				})
			},

			click1(e) {
				console.log('click1', e);
			},
			search(e) {
				console.log('searchChange', e);
			},

			cardClick(item) {
				console.log(item)

				uni.navigateTo({
					url: `/pages/note/note?id=${item.id}`,
				})
			},

			sortby(p) {
				return function(v1, v2) {
					let a = v1[p]
					let b = v2[p]
					return a < b ? 1 : a > b ? -1 : 0
				}
			},
			extractImage(htmlStr) {
				// 从html中提取出第一个图片
				var img = htmlStr.match(/<img.*?(?:>|\/>)/gi);
				if (img) {
					img = img[0].match(/src=[\'\"]?([^\'\"]*)[\'\"]?/i);
					if (img) {
						img = img[1];
					}
				}
				return img;
			},

			onBackPress() {
				// #ifdef APP-PLUS
				plus.key.hideSoftKeybord();
				// #endif
			},

			loadData() {
				for (var i = 0; i < this.notes.length; i++) {
					var html = this.notes[i].note_html
					var plainText = html.replace(/<[^>]+>/g, "");
					var plainText = html.replace(/<[^>]+>/g, "").replace(/&nbsp;/g, " ").replace(/&lt;/g, "<").replace(
						/&gt;/g, ">").replace(/&amp;/g, "&");

					// console.log(plainText)

					// 替换所有换行符为空格
					plainText = plainText.replace(/[\r\n\t]/g, " ");
					// 替换所有空格为一个空格
					plainText = plainText.replace(/\s+/g, " ");
					// 去除首尾空格
					plainText = plainText.replace(/(^\s*)|(\s*$)/g, "");

					this.notes[i].note_content = plainText
					// console.log(this.notes[i].note_content)
					this.notes[i].pic = this.extractImage(this.notes[i].note_html)

				}
			},

			refresh() {
				let uid = myRequest.getUID()
				let that = this
				this.groups = []
				this.problemSet = []
				myRequest.checkLogin()

				uni.request({
					url: myRequest.interfaceUrl() + '/note/all',
					method: 'GET',
					header: {
						'X-Token': myRequest.getToken()
					},

					success: (res) => {
						console.log(res)
						if (res.statusCode == 200) {
							if (res.data.notes && res.data.notes.length > 0) {
								this.notes = []
								let tempNotes = res.data.notes
								tempNotes = tempNotes.sort(that.sortby('like_count'))
								console.log(tempNotes)
								let end = Math.min(5, tempNotes.length)
								for (var i = 0; i < end; i++) {
									var t = {
										note_content: "",
										note_html: tempNotes[i].content,
										note_title: tempNotes[i].title,
										pic: "",
										create_time: tempNotes[i].created_at.slice(0, 10),
										id: tempNotes[i].id,
										like_count: tempNotes[i].like_count,
										star_count: tempNotes[i].favorite_count
									}
									this.notes.push(t);
								}
							}
							this.loadData()
						} else if (res.statusCode == 401) {
							myRequest.redirectToLogin()
						} else {
							myRequest.toast()
						}
					},

					fail: (res) => {
						console.log(res)
						myRequest.toast()
					}
				})

				uni.request({
					url: myRequest.interfaceUrl() + '/problem_set/all?group_id=0',
					method: 'GET',
					header: {
						'X-Token': myRequest.getToken()
					},

					success: (res) => {
						console.log(res)
						if (res.statusCode == 200) {
							this.problemSet = []
							if (res.data.problem_set && res.data.problem_set.length) {
								for (var i = 0; i < res.data.problem_set.length; i++) {
									let owner_id = res.data.problem_set[i].user_id
									var t = {
										id: res.data.problem_set[i].id,
										description: res.data.problem_set[i].description,
										name: res.data.problem_set[i].name,
										pic: "",
										created_at: res.data.problem_set[i].created_at.slice(0, 10),
										problem_number: res.data.problem_set[i].problem_count,
										user_id: res.data.problem_set[i].user_id,
										group_id: res.data.problem_set[i].group_id,
										user_info: res.data.problem_set[i].user_info,
									}
									this.problemSet.push(t);
								}
							}
						} else if (res.statusCode == 401) {
							if (myRequest.isLogin()) {
								myRequest.toast('请重新登录')
							} else {
								myRequest.toast('请登录')
							}
							uni.navigateTo({
								url: '/pages/login/login'
							})
						} else {
							myRequest.toast()
						}
					},

					fail: (res) => {
						console.log(res)
						myRequest.toast()
					}
				})

				uni.request({
					url: myRequest.interfaceUrl() + '/group/all',
					method: 'GET',
					header: {
						'X-Token': myRequest.getToken()
					},

					success: (res) => {
						console.log(res)
						if (res.statusCode == 200) {
							for (var i = 0; i < res.data.group.length; i++) {
								var t = {
									description: res.data.group[i].description,
									name: res.data.group[i].name,
									pic: "/static/pic/personal_group.svg",
									create_time: res.data.group[i].created_at.slice(0, 10),
									id: res.data.group[i].id,
								}
								this.groups.push(t);
							}
						} else if (res.statusCode == 401) {
							myRequest.redirectToLogin()
						} else {
							myRequest.toast()
						}
					},

					fail: (res) => {
						console.log(res)
						myRequest.toast()
					}
				})

			}
		},
		onLoad: function() {
			//this.refresh()
		},
		onShow: function() {
			this.refresh()
		}
	}
</script>

<style lang="scss">
	.u-page {
		padding: 0;

		&__item {

			&__title {
				color: $u-tips-color;
				background-color: $u-bg-color;
				padding: 15px;
				font-size: 15px;

				&__slot-title {
					color: $u-primary;
					font-size: 14px;
				}
			}

			&__slot-icon {
				width: 17px;
				height: 17px;
			}
		}
	}
</style>