<template>
	<view class="box">
		<view class="status-bar" :style="{height: barHeight}">
			<uni-nav-bar title="搜索" background-color="#00aaff" color="#FFFFFF" status-bar="true">
				<block slot="left">
					<view class="note-navbar">
						<uni-icons type="left" color="#FFFFFF" size="18" @click="back()" />
					</view>
				</block>
			</uni-nav-bar>
		</view>

		<view>
			<!--自定义navbar-->
			<view class="m-middle-2" style="padding-top: 10px; padding-bottom: 0px; display: flex;">
				<uni-row>
					<uni-col>
						<u-input placeholder="搜索题库、笔记、小组" prefixIcon="search"
							prefixIconStyle="font-size: 20px;color: #909399" shape="circle" v-model="editValue"
							customStyle="background-color: white;" @confirm="search()">
						</u-input>
					</uni-col>

					<!--
					<uni-col :span="20">
						<u-input placeholder="搜索题库、笔记、小组" prefixIcon="search"
							prefixIconStyle="font-size: 20px;color: #909399" shape="circle" v-model="editValue"
							customStyle="background-color: white;">
						</u-input>
					</uni-col>
					<uni-col :span="4">
						<button class="search-btn" size="mini" @click="search()" style="margin: auto;">
							<view>
								搜索
							</view>
						</button>
					</uni-col>
					-->
				</uni-row>

				<uni-row>
					<uni-col>
						<view style="display:flex;align-items:center;justify-content:center;">
							<u-tabs :is-scroll="false" :list="search_type_list" @click="click_area_tab"
								:current="select_area" style="font-size: 50px;"></u-tabs>
						</view>
					</uni-col>
				</uni-row>
			</view>
		</view>



		<view v-if="select_area == 0 && problemSet.length != 0">
			<view class="u-demo-block">
				<u-list customStyle="margin: auto; margin-top: 10px;">
					<u-list-item v-for="(item, index) in problemSet" :key="index">
						<uni-card isShadow border padding="15px 5px 0px 5px" margin="0px 15px 15px 15px"
							 @click="jumpToPS(item)" style="border-radius: 10px;">
							<view>
								<uni-row>
									<uni-col :span="2" align="start">
										<view v-if="item.user_id == 0" style="max-width: 30px;">
											<p class="official_PS_tag">
												官方题库
											</p>
										</view>
										<view v-else-if="item.group_id == 0" style="max-width: 30px;">
											<div class="personal_PS_tag">
												个人题库
											</div>
										</view>
										<view v-else-if="item.group_id != 0" style="max-width: 30px;">
											<div class="group_PS_tag">
												小组题库
											</div>
										</view>
									</uni-col>
									<uni-col :span="2" align="start">
									</uni-col>
									<uni-col :span="7" align="start">
										<p style="margin: auto;">
											<u-avatar :src="myRequest.imageUrl() + '/public'
											+ item.user_info.avatar_path" size="70px"></u-avatar>
										<div style="margin-top: 10px; font-family: shuhei; margin: auto;">
											{{item.user_info.nick_name}}
										</div>
										</p>
									</uni-col>
									<uni-col :span="1" align="start">
									</uni-col>
									<uni-col :span="12" align="start">
										<div class="shuhei" style="margin-bottom: 5px;margin-top: 18px;">
											<p style="font-size: 22px;">{{item.name}}</p>
										</div>
										<div style="font-size: 16px; margin-top: 5px;">
											{{item.problem_number}} 道题目
										</div>
									</uni-col>
								</uni-row>
							</view>
						</uni-card>
					</u-list-item>
				</u-list>
			</view>
		</view>

		<view v-else-if="select_area == 1 && notes.length != 0" style="margin-top: 10px;">
			<view v-for="(item, index) in notes" :key="index" >
				<uni-card isShadow border padding="15px 5px 0px 5px" margin="0px 15px 15px 15px"
					 @click="jumpToNote(item)" style="border-radius: 10px;">
					<view class="u-demo-block">
						<view>
							<view>
								<text class="note-title">{{item.note_title}}</text>
								<uni-row v-if="item.pic" style="margin-top: 15px;">
									<uni-col :span="12">
										<view>
											<p class="note-content"> {{item.note_content ? item.note_content : "..."}}
											</p>
										</view>
									</uni-col>
									<uni-col :offset="3" :span="9">
										<view>
											<u--image :src="item.pic" width="250rpx" height="180rpx"
												radius="15"></u--image>
										</view>
									</uni-col>
								</uni-row>

								<uni-row v-else style="margin-top: 15px;">
									<uni-col :span="24">
										<view>
											<p class="note-content"> {{item.note_content}}</p>
										</view>
									</uni-col>
								</uni-row>

								<view style="margin-top: 5px;">
									<u--text type="info" :text="item.create_time" size="12px"></u--text>
								</view>

								<view style="margin-top: 10px;">
									<uni-row>
										<uni-col :span="2">
											<u-icon name="/static/pic/like.svg" size="30px"></u-icon>
										</uni-col>
										<uni-col :span="4">
											<button type="primary" size="mini"
												style="width: 60px; background-color: #00aaff; margin-left: 5px;">{{ item.like_count }}</button>
										</uni-col>
										<uni-col :offset="10" :span="2">
											<u-icon name="/static/pic/star.svg" size="30px"></u-icon>
										</uni-col>
										<uni-col :span="4">
											<button size="mini"
												style="width: 60px; background-color: #f9ae3d; color: white; margin-left: 5px;">
												{{ item.star_count }}</button>
										</uni-col>
									</uni-row>
								</view>
							</view>
						</view>
					</view>

				</uni-card>
			</view>
		</view>

		<view v-else-if="select_area == 2 && group.length != 0" style="margin-top: 10px;">
			<view v-for="(item, index) in group" :key="index" >
				<uni-card @click="jumpToGroup(item)" isShadow border padding="15px 0px 15px 0px"
					margin="0px 15px 15px 15px" style="border-radius: 10px;">
					<view>
						<uni-row>
							<uni-col :span="7">
								<p style="margin: auto;">
									<u-avatar :src="myRequest.imageUrl() + '/public' + item.avatar_path"
										size="70px"></u-avatar>
								</p>
							</uni-col>
							<uni-col :span="2">

							</uni-col>
							<uni-col :span="14" align="start">
								<div class="shuhei" style="margin-bottom: 5px;margin-top: 12px;">
									<p style="font-size: 20px;">{{item.name}}</p>
								</div>
								<div style="font-size: 16px; margin-top: 5px;">
									{{item.member_count}} 个成员
								</div>
							</uni-col>
						</uni-row>
						<u-divider> </u-divider>
					</view>

					<text class="uni-body">{{item.description}}</text>
				</uni-card>
			</view>
		</view>


	</view>
</template>

<script>
	import note from '@/pages/note/note.vue'
	import myRequest from '../../common/request';
	import api from '@/common/api.js';

	const h = uni.getSystemInfoSync().statusBarHeight;
	export default {
		data() {
			return {
				editValue: "",
				searchValue: "",
				problemSet: [],
				group: [],
				notes: [],
				search_type_list_show: false,
				select_area: 0,
				limit: 100,
				offset: 0,
				isLoading: false,
				searched: false,
				status: 'loading',
				platfrom: uni.getSystemInfoSync().uniPlatform,
				search_type_list: [{
					name: '题库',
				}, {
					name: '笔记',
				}, {
					name: '小组'
				}],
			}
		},
		onLoad() {
			this.refresh()
		},
		computed: {
			scrollH: function() {
				let sys = uni.getSystemInfoSync();
				let winHeight = parseInt(sys.windowHeight) - 50
				return winHeight
			},
			barHeight() {
				return `calc(${h}px + 44px)`
			}
		},
		methods: {
			back() {
				uni.navigateBack()
			},

			jumpToPS(item) {
				uni.navigateTo({
					url: "/pages/problemSet/problemSetDetail?id=" + item.id
				})
			},

			jumpToGroup(item) {
				uni.navigateTo({
					url: `/pages/StudyGroup/StudyGroup?id=` + item.id,
				})
			},

			jumpToNote(item) {
				uni.navigateTo({
					url: `/pages/note/note?id=${item.id}`,
				})
			},

			click_area_tab(item) {
				this.select_area = item.index;
				if (this.searched) {
					this.load_one_page()
				}
			},

			getParam() {
				let routes = getCurrentPages(); // 获取当前打开过的页面路由数组
				let curRoute = routes[routes.length - 1].route //获取当前页面路由
				let curParam = routes[routes.length - 1].options; //获取路由参数
				// 拼接参数
				let param = ''
				for (let key in curParam) {
					param += '&' + key + '=' + curParam[key]
				}

				// 把参数保存为对像
				let obj = {}
				for (let key in curParam) {
					obj[key] = curParam[key]
				}
				return obj
			},

			refresh() {
				let params = this.getParam();
				this.searchValue = params['searchValue'];
				this.editValue = this.searchValue
				this.load_one_page()
			},

			search() {
				this.searchValue = this.editValue
				this.load_one_page()
			},

			load_problem_set() {
				this.problemSet = []
				var _this = this
				var data = {
					keyword: this.searchValue,
					limit: this.limit,
					offset: this.offset
				}
				myRequest.request(api.search_problem_set(), 'POST', data).then(
					function(res) {
						console.log(res)
						if (res.statusCode == 200) {
							if (res.data.problem_set && res.data.problem_set.length > 0) {
								for (var i = 0; i < res.data.problem_set.length; i++) {
									var t = {
										id: res.data.problem_set[i].id,
										description: res.data.problem_set[i].description,
										name: res.data.problem_set[i].name,
										pic: "",
										created_at: res.data.problem_set[i].created_at.slice(0, 10),
										problem_number: res.data.problem_set[i].problem_count,
										user_id: res.data.problem_set[i].user_id,
										group_id: res.data.problem_set[i].group_id,
										user_info: res.data.problem_set[i].user_info,
									}
									_this.problemSet.push(t);
								}
							} else if (res.data.total_count == 0) {
								console.log("!")
								myRequest.toast('搜索结果为空', 1500)
								setTimeout(() => {
									uni.hideToast();
								}, 1000)
							}
						} else if (res.statusCode == 401) {
							myRequest.redirectToLogin()
						} else {
							myRequest.toast()
						}
					}
				).catch(
					function(res) {
						console.log(res)
						myRequest.toast()
					})
				this.searched = true
			},


			//note
			extractImage(htmlStr) {
				// 从html中提取出第一个图片
				var img = htmlStr.match(/<img.*?(?:>|\/>)/gi);
				if (img) {
					img = img[0].match(/src=[\'\"]?([^\'\"]*)[\'\"]?/i);
					if (img) {
						img = img[1];
					}
				}
				return img;
			},

			onBackPress() {
				// #ifdef APP-PLUS
				plus.key.hideSoftKeybord();
				// #endif
			},

			loadData(start) {
				for (var i = start; i < this.notes.length; i++) {
					var html = this.notes[i].note_html
					var plainText = html.replace(/<[^>]+>/g, "");
					var plainText = html.replace(/<[^>]+>/g, "").replace(/&nbsp;/g, " ").replace(/&lt;/g, "<").replace(
						/&gt;/g, ">").replace(/&amp;/g, "&");

					// console.log(plainText)

					// 替换所有换行符为空格
					plainText = plainText.replace(/[\r\n\t]/g, " ");
					// 替换所有空格为一个空格
					plainText = plainText.replace(/\s+/g, " ");
					// 去除首尾空格
					plainText = plainText.replace(/(^\s*)|(\s*$)/g, "");

					this.notes[i].note_content = plainText
					// console.log(this.notes[i].note_content)
					this.notes[i].pic = this.extractImage(this.notes[i].note_html)
				}
			},


			load_note() {
				myRequest.checkLogin()
				this.notes = []
				var _this = this
				var data = {
					keyword: this.searchValue,
					limit: this.limit,
					offset: this.offset
				}

				myRequest.request(api.search_note(), 'POST', data).then(
					function(res) {
						if (res.statusCode == 200) {
							if (res.data.notes && res.data.notes.length > 0) {
								for (var i = 0; i < res.data.notes.length; i++) {
									var t = {
										note_content: "",
										note_html: res.data.notes[i].content,
										note_title: res.data.notes[i].title,
										pic: "",
										create_time: res.data.notes[i].created_at.slice(0, 10),
										id: res.data.notes[i].id,
										like_count: res.data.notes[i].like_count,
										star_count: res.data.notes[i].favorite_count
									}
									_this.notes.push(t);
								}
							} else if (res.data.total_count == 0) {
								console.log("!")
								myRequest.toast('搜索结果为空', 1500)
								setTimeout(() => {
									uni.hideToast();
								}, 1000)
							}
							_this.loadData(0)
						} else if (res.statusCode == 401) {
							myRequest.redirectToLogin()
						} else {
							myRequest.toast()
						}
					}
				).catch(
					function(res) {
						console.log(res)
						myRequest.toast()
					})
				this.searched = true
			},

			load_group() {
				var _this = this
				var data = {
					keyword: this.searchValue,
					limit: this.limit,
					offset: this.offset
				}
				this.group = []
				myRequest.request(api.search_group(), 'POST', data).then(
					function(res) {
						console.log(res)
						if (res.statusCode == 200) {
							if (res.data.group && res.data.group.length > 0) {
								for (var i = 0; i < res.data.group.length; i++) {
									var t = {
										description: res.data.group[i].description,
										name: res.data.group[i].name,
										avatar_path: res.data.group[i].avatar_url,
										id: res.data.group[i].id,
										member_count: res.data.group[i].member_count,
										created_at: res.data.group[i].created_at.slice(0, 10),
									}
									_this.group.push(t);
								}
							} else if (res.data.total_count == 0) {
								myRequest.toast('搜索结果为空', 1500)
								setTimeout(() => {
									uni.hideToast();
								}, 1000)
							}
						} else if (res.statusCode == 401) {
							myRequest.redirectToLogin()
						} else {
							myRequest.toast()
						}
					}
				).catch(
					function(res) {
						console.log(res)
						myRequest.toast()
					})
				this.searched = true
			},

			load_one_page() {
				var _this = this
				if (this.select_area == 0) {
					_this.load_problem_set()
				} else if (this.select_area == 1) {
					_this.load_note()
				} else if (this.select_area == 2) {
					_this.load_group()
				}
			},

		}
	}
</script>

<style>
	page {
		background: #f1f1f1;
	}

	.status-bar {
		width: 100%;
		position: sticky;
		top: 0;
		z-index: 10;
	}

	.search-btn {
		background-color: #f1f1f1;
		color: #00aaff;
	}

	.search-btn::after {
		border: none;
	}
</style>