<template>
	<view class="container">
		<view class="status-bar">
			<!--自定义navbar-->
			<uni-nav-bar title="题库详情" background-color="#00aaff" color="#FFFFFF" status-bar="true">
				<block slot="left">
					<view class="note-navbar">
						<uni-icons type="left" color="#FFFFFF" size="18" @click="back()" />
					</view>
				</block>
			</uni-nav-bar>
		</view>

		<view class="main-body">
			<view class="title-line">
				<u-row>
					<u-col span="6">
						<view style="font-size: 20px; font-weight: bold;">
							{{proDetail.title}}
						</view>
						<view style="font-size: 14px; color: darkgrey;">
							{{proDetail.descrip}}
						</view>
					</u-col>
					<u-col span="3">
						<button class="mini-btn" type="primary" size="mini">编辑</button>
					</u-col>
					<u-col span="3">
						<button class="mini-btn" type="warn" size="mini" @click="deletePS()">删除</button>
					</u-col>
				</u-row>
			</view>
			<view class="owner_info_box">
				<u-row>
					<u-col span="2">
						<u--image width="50px" height="50px" src="https://cdn.uviewui.com/uview/album/1.jpg"
							shape="circle"></u--image>
					</u-col>
					<u-col span="9">
						<view class="" style="font-size: 16px;">
							{{proDetail.ownerName}}
						</view>
						<view class="" style="font-size: 14px; color: darkgray;">
							<u-row>
								<u-col span="4">
									2023-3-31
								</u-col>
								<u-col span="4">
									{{proDetail.totalNum}}题
								</u-col>
								<u-col span="4">
									<view class="button-group">
										<button class="button" size="mini" type="primary" @click="jumpToProblemUpload()"
											style="background-color: #00aaff; text-align: center; margin: auto;">添加试题</button>
									</view>
								</u-col>
							</u-row>
						</view>
					</u-col>
				</u-row>
			</view>
			<view class="proSetStatis">
				<uni-row>
					<uni-col :span="8">
						<view class="" style="margin: auto;">
							<u-icon name="/static/pic/problemSet/thinking.svg" size="40px"></u-icon>
						</view>
						<view class="" style="text-align: center; font-size: 15px;">
							我的错题
						</view>
						<view class="" style="text-align: center; font-size: 12px; color: darkgrey;">
							(0)
						</view>
					</uni-col>
					<uni-col :span="8">
						<view class="" style="text-align: center; margin: auto;">
							<u-icon name="/static/pic/problemSet/envolop.svg" size="40px"></u-icon>
						</view>
						<view class="" style="text-align: center; font-size: 15px;">
							我的收藏
						</view>
						<view class="" style="text-align: center; font-size: 12px; color: darkgrey;">
							(0)
						</view>
					</uni-col>
					<uni-col :span="8">
						<view class="" style="text-align: center; margin: auto;">
							<u-icon name="/static/pic/homeNote.png" size="40px"></u-icon>
						</view>
						<view class="" style="text-align: center; font-size: 15px;">
							我的笔记
						</view>
						<view class="" style="text-align: center; font-size: 12px; color: darkgrey;">
							(0)
						</view>
					</uni-col>
				</uni-row>
			</view>

			<view class="practise-box">
				<view class="practise-box-title" style="font-size: 18px;">
					练习模式
				</view>

				<view class="practise-box-row">
					<uni-row>
						<uni-col :span="12">
							<view class="practise-card" @click="jumpToSequencePractice()">
								<uni-row>
									<uni-col :span="18">
										<view class="practise-card-title">
											顺序练习
										</view>
										<view class="practise-card-detail">
											试题顺序练习
										</view>
									</uni-col>
									<uni-col :span="6">
										<u-icon name="/static/pic/problemSet/book.svg" size="40px"></u-icon>
									</uni-col>
								</uni-row>
							</view>
						</uni-col>
						<uni-col :span="12">
							<view class="practise-card">
								<uni-row>
									<uni-col :span="18">
										<view class="practise-card-title">
											模拟考试
										</view>
										<view class="practise-card-detail">
											随机抽题模拟
										</view>
									</uni-col>
									<uni-col :span="6">
										<u-icon name="/static/pic/problemSet/abc.svg" size="40px"></u-icon>
									</uni-col>
								</uni-row>
							</view>
						</uni-col>
					</uni-row>
				</view>
				<view class="practise-box-row">
					<uni-row>
						<uni-col :span="12">
							<view class="practise-card" @click="jumpToRandomPractice()">
								<uni-row>
									<uni-col :span="18">
										<view class="practise-card-title">
											随机练习
										</view>
										<view class="practise-card-detail">
											试题顺序打乱练习
										</view>
									</uni-col>
									<uni-col :span="6">
										<u-icon name="/static/pic/problemSet/phone.svg" size="40px"></u-icon>
									</uni-col>
								</uni-row>
							</view>
						</uni-col>
						<uni-col :span="12">
							<view class="practise-card">
								<uni-row>
									<uni-col :span="18">
										<view class="practise-card-title">
											题型练习
										</view>
										<view class="practise-card-detail">
											按照题型分类练习
										</view>
									</uni-col>
									<uni-col :span="6">
										<u-icon name="/static/pic/problemSet/pencil.svg" size="40px"></u-icon>
									</uni-col>
								</uni-row>
							</view>
						</uni-col>
					</uni-row>
				</view>
				<view class="practise-box-row">
					<uni-row>
						<uni-col :span="12">
							<view class="practise-card" @click="jumpToSetProblemList()">
								<uni-row>
									<uni-col :span="18">
										<view class="practise-card-title">
											所有试题
										</view>
										<view class="practise-card-detail">
											查看所有试题
										</view>
									</uni-col>
									<uni-col :span="6">
										<u-icon name="/static/pic/problemSet/desk.svg" size="40px"></u-icon>
									</uni-col>
								</uni-row>
							</view>
						</uni-col>
						<uni-col :span="12">
							<view class="practise-card">
								<uni-row>
									<uni-col :span="18">
										<view class="practise-card-title">
											错题练习
										</view>
										<view class="practise-card-detail">
											针对错题进行练习
										</view>
									</uni-col>
									<uni-col :span="6">
										<u-icon name="/static/pic/problemSet/gas_station.svg" size="40px"></u-icon>
									</uni-col>
								</uni-row>
							</view>
						</uni-col>
					</uni-row>
				</view>

			</view>


		</view>

		<view class="footer">
			<u-row>
				<u-col span="2"></u-col>
				<u-col span="3">
					<u-button type="primary" shape="circle" text="分享"></u-button>
				</u-col>
				<u-col span="2"></u-col>
				<u-col span="3">
					<u-button v-if="proDetail.is_favorite == true" type="success" shape="circle" text="已收藏" @click="unstarPS()"></u-button>
					<u-button v-if="proDetail.is_favorite == false" type="success" shape="circle" text="收藏" @click="starPS()"></u-button>
				</u-col>
				<u-col span="2"></u-col>
			</u-row>
		</view>

	</view>
</template>

<script>
	import api from '@/common/api.js';
	import myRequest from '../../common/request';

	export default {
		data() {
			return {
				proDetail: {
					title: "",
					ownerName: "丁真",
					totalNum: 0,
					descrip: '',
					is_favorite: false,
				},
				problem_set_id: 0,

			}
		},
		onLoad: function(option) { //option为object类型，会序列化上个页面传递的参数
			myRequest.checkLogin()
			this.problem_set_id = option.id
			console.log('this.problem_set_id: ' + this.problem_set_id); //打印出上个页面传递的参数。

			uni.request({
				url: myRequest.interfaceUrl() + '/problem_set/all?id=' + option.id,
				method: 'GET',
				header: {
					'X-Token': myRequest.getToken()
				},

				success: (res) => {
					console.log(res)
					if (res.statusCode == 200) {
						this.proDetail.title = res.data.problem_set[0].name
						this.proDetail.totalNum = res.data.problem_set[0].problem_count
						this.proDetail.descrip = res.data.problem_set[0].description
						this.proDetail.is_favorite = res.data.problem_set[0].is_favorite
						console.log(this.proDetail)
						uni.request({
							url: myRequest.interfaceUrl() +
								`/user/info/${res.data.problem_set[0].user_id}`,
							method: 'GET',
							header: {
								'X-Token': myRequest.getToken()
							},

							success: (res2) => {
								console.log(res2)
								if (res2.statusCode == 200) {
									this.proDetail.ownerName = res2.data.user_name
								} else if (res2.statusCode == 401) {
									myRequest.redirectToLogin()
								} else {
									myRequest.toast()
								}
							},

							fail: (res2) => {
								console.log(res2)
								myRequest.toast()
							},
						})

					} else if (res.statusCode == 401) {
						myRequest.redirectToLogin()
					} else {
						myRequest.toast()
					}
				},

				fail: (res) => {
					console.log(res)
					myRequest.toast()
				}
			})

		},
		methods: {
			jumpToRandomPractice() {
				uni.navigateTo({
					url: "/pages/problemExam/problemRandomExam?id=" + this.problem_set_id
				})
			},
			jumpToProblemUpload() {
				uni.navigateTo({
					url: "/pages/problemSet/problemUpload?id=" + this.problem_set_id
				})
			},
			jumpToSequencePractice() {
				uni.navigateTo({
					url: "/pages/problemExam/problemExam?id=" + this.problem_set_id
				})
			},
			jumpToSetProblemList() {
				uni.navigateTo({
					url: "/pages/problemSet/problemSetProblemList?id=" + this.problem_set_id
				})
			},
			back() {
				uni.navigateBack({
				    delta: 1
				});
			},
			deletePS() {
				uni.request({
					url: myRequest.interfaceUrl() + api.problem_set_delete(this.problem_set_id),
					method: 'DELETE',
					header: {
						'X-Token': myRequest.getToken()
					},

					success: (res) => {
						console.log(res)
						if (res.statusCode == 200) {
							myRequest.toast('删除成功', 1000, true)
							setTimeout(() => {
								uni.hideToast();
								//关闭提示后跳转
								uni.navigateBack({
										delta: 1,
								});
							}, 1000)
						} else if (res.statusCode == 401) {
							myRequest.redirectToLogin()
						} else {
							myRequest.toast()
						}
					},

					fail: (res) => {
						console.log(res)
						myRequest.toast()
					}
				})
			},
			starPS() {
				uni.request({
					url: myRequest.interfaceUrl() + api.problem_set_favorite(this.problem_set_id),
					method: 'POST',
					header: {
						'X-Token': myRequest.getToken()
					},
			
					success: (res) => {
						console.log(res)
						if (res.statusCode == 200) {
							this.proDetail.is_favorite = true
							myRequest.toast('收藏成功', 1000, true)
						} else if (res.statusCode == 401) {
							myRequest.redirectToLogin()
						} else {
							myRequest.toast()
						}
					},
			
					fail: (res) => {
						console.log(res)
						myRequest.toast()
					}
				})
			},
			unstarPS() {
				uni.request({
					url: myRequest.interfaceUrl() + api.problem_set_unfavorite(this.problem_set_id),
					method: 'DELETE',
					header: {
						'X-Token': myRequest.getToken()
					},
							
					success: (res) => {
						console.log(res)
						if (res.statusCode == 200) {
							this.proDetail.is_favorite = false
							myRequest.toast('取消收藏成功', 1000, true)
						} else if (res.statusCode == 401) {
							myRequest.redirectToLogin()
						} else {
							myRequest.toast()
						}
					},
							
					fail: (res) => {
						console.log(res)
						myRequest.toast()
					}
				})
			},


		},
	}
</script>

<style lang="scss">
	.status-bar {
		width: 100%;
		position: sticky;
		top: 0;
		z-index: 10;
	}
	
	.container {
		height: 100%;
	}

	.main-body {
		margin: 0 10px 0 10px;
	}

	.title-line {
		margin: 15px 0 15px 0;
	}

	.owner_info_box {
		margin-bottom: 20px;
	}

	.proSetStatis {
		margin-bottom: 40px;
	}

	.practise-box {
		.practise-box-title {
			margin-bottom: 20px;
		}

		.practise-box-row {
			margin-bottom: 20px;
		}

		.practise-card {
			background-color: #e5f3ff;
			height: 50px;
			width: 90%;
			margin: auto;
			border-radius: 10px;
			justify-content: center;
			padding: 12px;

			.practise-card-title {
				font-size: 15px;

			}

			.practise-card-detail {
				margin-top: 3px;
				color: darkgrey;
				font-size: 10px;
			}
		}
	}

	.button-group {}

	.footer {
		margin: 0;
		padding-top: 10px;
		padding-bottom: 10px;
		width: 100vw;
		background-color: #fcfcfc;
		position: fixed;
		bottom: 0;
		height: 60px;
		overflow: auto;
	}
</style>
